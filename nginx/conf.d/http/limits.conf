# limit_req_zone key zone=name:size rate=rate;
# processing rate of requests coming from a single IP address. 
# The limitation is done using the “leaky bucket” method. 
limit_req_zone  $binary_remote_addr zone=limitreqbyaddr:64m rate=1r/s;
limit_req_zone  $server_name zone=limitreqbyserver:64m rate=1r/s;

# limit_req_log_level info | notice | warn | error;
limit_req_log_level error;

# limit_conn_zone key zone=name:size;
# limits the number of connections from a single IP address. 
limit_conn_zone $binary_remote_addr zone=limitconnbyaddr:32m;
limit_conn_zone $server_name zone=limitconnbyserver:32m;

# limit_conn_log_level info | notice | warn | error;
limit_conn_log_level error;

# limit_req zone=name [burst=number] [nodelay | delay=number];
# If the requests rate exceeds the rate configured for a zone, 
# their processing is delayed such that requests are processed at a defined rate. 
# Excessive requests are delayed until their number exceeds the maximum burst size 
# in which case the request is terminated with an error
limit_req zone=limitreqbyaddr;
limit_req zone=limitreqbyserver;

# limit_conn zone number;
limit_conn limitconnbyaddr 5;
limit_conn limitconnbyserver 5;

# limit_*_status status;
# error status code
limit_req_status 429;
limit_conn_status 429;
